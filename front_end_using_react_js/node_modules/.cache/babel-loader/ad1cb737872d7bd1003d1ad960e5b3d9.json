{"ast":null,"code":"import _classCallCheck from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button,Col,Label,Modal,ModalBody,ModalHeader,Row}from\"reactstrap\";import{Control,Errors,LocalForm}from\"react-redux-form\";var required=function required(val){return val&&val.length;};var maxLength=function maxLength(len){return function(val){return!val||val.length<=len;};};var minLength=function minLength(len){return function(val){return val&&val.length>=len;};};var CommentForm=/*#__PURE__*/function(_Component){_inherits(CommentForm,_Component);var _super=_createSuper(CommentForm);function CommentForm(props){var _this;_classCallCheck(this,CommentForm);_this=_super.call(this,props);_this.state={isModalOpen:false};_this.toggleModal=_this.toggleModal.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(CommentForm,[{key:\"toggleModal\",value:function toggleModal(){this.setState({isModalOpen:!this.state.isModalOpen});}},{key:\"handleSubmit\",value:function handleSubmit(values){this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);this.toggleModal();alert(\"Values: \"+JSON.stringify(values)+values.rating);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"CommentForm\"},/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isModalOpen,toggle:this.toggleModal},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggleModal},\"Submit Comment\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(LocalForm,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(Row,{className:\"form-group\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"rating\",xs:12},\"Rating\"),/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(Control.select,{model:\".rating\",id:\"rating\",name:\"rating\",className:\"form-control\"},/*#__PURE__*/React.createElement(\"option\",{value:\"1\"},\"1\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2\"},\"2\"),/*#__PURE__*/React.createElement(\"option\",{value:\"3\"},\"3\"),/*#__PURE__*/React.createElement(\"option\",{value:\"4\"},\"4\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5\"},\"5\")))),/*#__PURE__*/React.createElement(Row,{className:\"form-group\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"name\",xs:12},\"Your Name\"),/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(Control.text,{model:\".author\",id:\"name\",className:\"form-control\",name:\"author\",placeholder:\"Your Name\",validators:{required:required,minLength:minLength(3),maxLength:maxLength(15)}}),/*#__PURE__*/React.createElement(Errors,{model:\".author\",className:\"text-danger\",show:\"touched\",messages:{required:'Required ',minLength:'Must be greater than 2 characters',maxLength:'Must be 15 characters or less'}}))),/*#__PURE__*/React.createElement(Row,{className:\"form-group\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"comment\",xs:12},\"Comment\"),/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(Control.textarea,{id:\"comment\",className:\"form-control\",name:\"comment\",rows:6,model:\".comment\"}))),/*#__PURE__*/React.createElement(Button,{type:\"submit\",value:\"submit\",color:\"primary\"},\"Submit\")))),/*#__PURE__*/React.createElement(Button,{outline:true,onClick:this.toggleModal},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-pencil fa-lg\"}),\"Submit Comment\"));}}]);return CommentForm;}(Component);export default CommentForm;","map":{"version":3,"sources":["/home/rohit/Public/dev_app/src/components/CommentForm.js"],"names":["React","Component","Button","Col","Label","Modal","ModalBody","ModalHeader","Row","Control","Errors","LocalForm","required","val","length","maxLength","len","minLength","CommentForm","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","postComment","dishId","rating","author","comment","alert","JSON","stringify"],"mappings":"qtBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,MAAR,CAAgBC,GAAhB,CAAqBC,KAArB,CAA4BC,KAA5B,CAAmCC,SAAnC,CAA8CC,WAA9C,CAA2DC,GAA3D,KAAqE,YAArE,CACA,OAAQC,OAAR,CAAiBC,MAAjB,CAAyBC,SAAzB,KAAyC,kBAAzC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,QAASA,CAAAA,GAAG,EAAIA,GAAG,CAACC,MAApB,EAAjB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,QAAS,UAACH,GAAD,QAAS,CAAEA,GAAF,EAAWA,GAAG,CAACC,MAAJ,EAAcE,GAAlC,EAAT,EAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACD,GAAD,QAAS,UAACH,GAAD,QAASA,CAAAA,GAAG,EAAKA,GAAG,CAACC,MAAJ,EAAcE,GAA/B,EAAT,EAAlB,C,GAEME,CAAAA,W,0GACF,qBAAYC,KAAZ,CAAmB,6CACf,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,WAAW,CAAE,KADJ,CAAb,CAGA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CAPe,aAQlB,C,yEAEY,CACT,KAAKE,QAAL,CAAc,CACVJ,WAAW,CAAE,CAAC,KAAKD,KAAL,CAAWC,WADf,CAAd,EAGH,C,kDACYK,M,CAAQ,CACjB,KAAKP,KAAL,CAAWQ,WAAX,CAAuB,KAAKR,KAAL,CAAWS,MAAlC,CAA0CF,MAAM,CAACG,MAAjD,CAAyDH,MAAM,CAACI,MAAhE,CAAwEJ,MAAM,CAACK,OAA/E,EACA,KAAKT,WAAL,GACAU,KAAK,CAAC,WAAaC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAb,CAAqCA,MAAM,CAACG,MAA7C,CAAL,CACH,C,uCAGQ,CACL,mBAEI,2BAAK,SAAS,CAAE,aAAhB,eAEI,oBAAC,KAAD,EAAO,MAAM,CAAE,KAAKT,KAAL,CAAWC,WAA1B,CAAuC,MAAM,CAAE,KAAKC,WAApD,eACI,oBAAC,WAAD,EAAa,MAAM,CAAE,KAAKA,WAA1B,mBADJ,cAEI,oBAAC,SAAD,mBACI,oBAAC,SAAD,EAAW,QAAQ,CAAE,KAAKE,YAA1B,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,YAAhB,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,QAAhB,CAA0B,EAAE,CAAE,EAA9B,WADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,OAAD,CAAS,MAAT,EAAgB,KAAK,CAAC,SAAtB,CAAgC,EAAE,CAAC,QAAnC,CAA4C,IAAI,CAAE,QAAlD,CACA,SAAS,CAAE,cADX,eAEI,8BAAQ,KAAK,CAAC,GAAd,MAFJ,cAGI,8BAAQ,KAAK,CAAC,GAAd,MAHJ,cAII,8BAAQ,KAAK,CAAC,GAAd,MAJJ,cAKI,8BAAQ,KAAK,CAAC,GAAd,MALJ,cAMI,8BAAQ,KAAK,CAAC,GAAd,MANJ,CADJ,CAJJ,CADJ,cAgBI,oBAAC,GAAD,EAAK,SAAS,CAAE,YAAhB,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,MAAhB,CAAwB,EAAE,CAAE,EAA5B,cADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,OAAD,CAAS,IAAT,EAAc,KAAK,CAAE,SAArB,CAAgC,EAAE,CAAE,MAApC,CAA4C,SAAS,CAAE,cAAvD,CAAuE,IAAI,CAAE,QAA7E,CACc,WAAW,CAAE,WAD3B,CAEc,UAAU,CAAE,CAACZ,QAAQ,CAARA,QAAD,CAAWK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA/B,CAAoCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAAvD,CAF1B,EADJ,cAII,oBAAC,MAAD,EAAQ,KAAK,CAAE,SAAf,CAA0B,SAAS,CAAE,aAArC,CACQ,IAAI,CAAE,SADd,CACyB,QAAQ,CAAE,CAC/BH,QAAQ,CAAE,WADqB,CAE/BK,SAAS,CAAE,mCAFoB,CAG/BF,SAAS,CAAE,+BAHoB,CADnC,EAJJ,CAJJ,CAhBJ,cAiCI,oBAAC,GAAD,EAAK,SAAS,CAAE,YAAhB,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,SAAhB,CAA2B,EAAE,CAAE,EAA/B,YADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,OAAD,CAAS,QAAT,EAAkB,EAAE,CAAE,SAAtB,CAAiC,SAAS,CAAE,cAA5C,CAA4D,IAAI,CAAE,SAAlE,CACA,IAAI,CAAE,CADN,CACS,KAAK,CAAE,UADhB,EADJ,CAJJ,CAjCJ,cA2CI,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,QAA5B,CAAqC,KAAK,CAAC,SAA3C,WA3CJ,CADJ,CAFJ,CAFJ,cAqDI,oBAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,OAAO,CAAE,KAAKO,WAA9B,eAA2C,4BAAM,SAAS,CAAC,oBAAhB,EAA3C,kBArDJ,CAFJ,CA4DH,C,yBApFqBrB,S,EAwF1B,cAAeiB,CAAAA,WAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Col, Label, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\nimport {Control, Errors, LocalForm} from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n    handleSubmit(values) {\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n        this.toggleModal();\n        alert(\"Values: \" + JSON.stringify(values)+ values.rating);\n    }\n\n\n    render() {\n        return (\n\n            <div className={\"CommentForm\"}>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"rating\"} xs={12}>\n                                    Rating\n                                </Label>\n                                <Col xs={12} >\n                                    <Control.select model=\".rating\" id=\"rating\" name={\"rating\"}\n                                    className={\"form-control\"}>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"name\"} xs={12}>\n                                    Your Name\n                                </Label>\n                                <Col xs={12}>\n                                    <Control.text model={\".author\"} id={\"name\"} className={\"form-control\"} name={\"author\"}\n                                                  placeholder={\"Your Name\"}\n                                                  validators={{required, minLength: minLength(3), maxLength:maxLength(15)}}/>\n                                    <Errors model={\".author\"} className={\"text-danger\"}\n                                            show={\"touched\"} messages={{\n                                        required: 'Required ',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}/>\n                                </Col>\n\n                            </Row>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"comment\"} xs={12}>\n                                    Comment\n                                </Label>\n                                <Col xs={12}>\n                                    <Control.textarea id={\"comment\"} className={\"form-control\"} name={\"comment\"}\n                                    rows={6} model={\".comment\"}/>\n                                </Col>\n                            </Row>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"/>\n                    Submit Comment\n                </Button>\n            </div>\n        );\n    }\n\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}