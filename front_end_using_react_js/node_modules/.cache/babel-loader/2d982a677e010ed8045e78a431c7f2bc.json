{"ast":null,"code":"import _objectSpread from\"/home/rohit/Public/dev_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore,combineReducers,applyMiddleware}from'redux';import{Dishes}from'./dishes';import{Comments}from'./comments';import{Promotions}from'./promotions';import{Leaders}from'./leaders';import{createForms}from'react-redux-form';import thunk from'redux-thunk';import logger from'redux-logger';import{InitialFeedback}from'./forms';export var ConfigureStore=function ConfigureStore(){var store=createStore(combineReducers(_objectSpread({dishes:Dishes,comments:Comments,promotions:Promotions,leaders:Leaders},createForms({feedback:InitialFeedback}))),applyMiddleware(thunk,logger));return store;};","map":{"version":3,"sources":["/home/rohit/Public/dev_app/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","Dishes","Comments","Promotions","Leaders","createForms","thunk","logger","InitialFeedback","ConfigureStore","store","dishes","comments","promotions","leaders","feedback"],"mappings":"gJAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,eAAT,KAAgC,SAAhC,CAGA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CACrBC,eAAe,gBACXY,MAAM,CAAEV,MADG,CAEXW,QAAQ,CAAEV,QAFC,CAGXW,UAAU,CAAEV,UAHD,CAIXW,OAAO,CAAEV,OAJE,EAKRC,WAAW,CAAC,CACXU,QAAQ,CAAEP,eADC,CAAD,CALH,EADM,CAUrBR,eAAe,CAACM,KAAD,CAAQC,MAAR,CAVM,CAAzB,CAaA,MAAOG,CAAAA,KAAP,CACH,CAfM","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { createForms } from 'react-redux-form';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}