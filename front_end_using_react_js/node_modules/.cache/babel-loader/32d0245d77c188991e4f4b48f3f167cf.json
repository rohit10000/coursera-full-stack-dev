{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrl}from\"../shared/baseUrl\";export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(dishId,rating,author,comment){return function(dispatch){var newComment={dishId:dishId,rating:rating,author:author,comment:comment};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:\"POST\",body:JSON.stringify(newComment),headers:{\"Content-Type\":\"application/json\"},credentials:\"same-origin\"}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('post comments',error.message);alert('Your comment could not be posted\\nError: '+error.message);});};};export var dishesLoading=function dishesLoading(){return{type:ActionTypes.DISHES_LOADING};};export var dishesFailed=function dishesFailed(errmess){return{type:ActionTypes.DISHES_FAILED,payload:errmess};};export var addDishes=function addDishes(dishes){return{type:ActionTypes.ADD_DISHES,payload:dishes};};export var fetchDishes=function fetchDishes(){return function(dispatch){dispatch(dishesLoading);fetch(baseUrl+'dishes').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(dishes){dispatch(addDishes(dishes));}).catch(function(error){return dispatch(dishesFailed(error.message));});};};//comments\nexport var fetchComments=function fetchComments(){return function(dispatch){fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var commentsFailed=function commentsFailed(errmess){return{type:ActionTypes.COMMENTS_FAILED,payload:errmess};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};//promos\nexport var fetchPromos=function fetchPromos(){return function(dispatch){dispatch(promosLoading());fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(promos){return dispatch(addPromos(promos));}).catch(function(error){return dispatch(promosFailed(error.message));});};};export var promosLoading=function promosLoading(){return{type:ActionTypes.PROMOS_LOADING};};export var promosFailed=function promosFailed(errmess){return{type:ActionTypes.PROMOS_FAILED,payload:errmess};};export var addPromos=function addPromos(promos){return{type:ActionTypes.ADD_PROMOS,payload:promos};};//Leaders\nexport var fetchLeaders=function fetchLeaders(){return function(dispatch){dispatch(leadersLoading());fetch(baseUrl+'leaders').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(leaders){return dispatch(addLeaders(leaders));}).catch(function(error){return dispatch(leadersFailed(error.message));});};};export var leadersLoading=function leadersLoading(){return{type:ActionTypes.LEADERS_LOADING};};export var leadersFailed=function leadersFailed(errmess){return{type:ActionTypes.LEADERS_FAILED,payload:errmess};};export var addLeaders=function addLeaders(leaders){return{type:ActionTypes.ADD_LEADERS,payload:leaders};};export var postFeedback=function postFeedback(feedback){return function(){var newFeedback={agree:feedback.agree,contactType:feedback.contactType,email:feedback.email,firstname:feedback.firstname,lastname:feedback.lastname,message:feedback.message,telnum:feedback.telnum};newFeedback.date=new Date().toISOString();fetch(baseUrl+'feedback',{method:'POST',body:JSON.stringify(newFeedback),headers:{\"Content-Type\":\"application/json\"},credentials:\"same-origin\"}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(response){console.log(\"Posted feedback successfully\",response);alert(\"Thank you for your Feedback\\n\"+JSON.stringify(response));}).catch(function(error){console.log(error);alert(\"Sorry your feedback is not submitted\\n Error:\"+error);});};};","map":{"version":3,"sources":["/home/rohit/Public/dev_app/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","dishesLoading","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","addDishes","dishes","ADD_DISHES","fetchDishes","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFeedback","feedback","newFeedback","agree","contactType","email","firstname","lastname","telnum"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from \"../shared/baseUrl\";\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\n\nexport const dishesLoading = () =>{\n    return {\n        type: ActionTypes.DISHES_LOADING\n    }\n}\n\nexport const dishesFailed = (errmess) => {\n    return{\n        type: ActionTypes.DISHES_FAILED,\n        payload:errmess\n    }\n}\n\nexport const addDishes = (dishes) => {\n    return {\n        type: ActionTypes.ADD_DISHES,\n        payload: dishes\n    }\n}\n\nexport const fetchDishes = () => {\n    return function (dispatch){\n        dispatch(dishesLoading);\n\n        fetch(baseUrl + 'dishes')\n            .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n                error => {\n                    let errmess = new Error(error.message);\n                    throw errmess;\n                })\n            .then(response => response.json())\n            .then(dishes => {\n                    dispatch(addDishes(dishes))\n                }\n            )\n            .catch(error => dispatch(dishesFailed(error.message)));\n    }\n}\n//comments\nexport const fetchComments = () => (dispatch) => {\n    fetch(baseUrl + 'comments')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n//promos\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    fetch(baseUrl + 'promotions')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n//Leaders\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading());\n\n    fetch(baseUrl + 'leaders')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\nexport const postFeedback = (feedback) => () => {\n\n    const newFeedback = {\n        agree: feedback.agree,\n        contactType: feedback.contactType,\n        email: feedback.email,\n        firstname: feedback.firstname,\n        lastname: feedback.lastname,\n        message: feedback.message,\n        telnum: feedback.telnum,\n    }\n    newFeedback.date = new Date().toISOString();\n\n    fetch(baseUrl + 'feedback',{\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(response => {\n            console.log(\"Posted feedback successfully\", response)\n            alert(\"Thank you for your Feedback\\n\"+ JSON.stringify(response));\n        })\n        .catch(error => {\n            console.log(error);\n            alert(\"Sorry your feedback is not submitted\\n Error:\"+ error);\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}