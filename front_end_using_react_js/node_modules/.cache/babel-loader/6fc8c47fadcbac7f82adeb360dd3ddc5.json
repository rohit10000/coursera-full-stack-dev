{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/coursera/front_end_with_react_js/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport Menu from './Menu';\nimport DishDetail from './DishDetail';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport About from \"./About\";\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    const HomePage = () => {\n      return /*#__PURE__*/React.createElement(Home, {\n        dish: this.props.dishes.dishes.filter(dish => dish.featured)[0],\n        dishesLoading: this.props.dishes.isLoading,\n        dishErrMess: this.props.dishes.errMess,\n        promotion: this.props.promotions.promotions.filter(promo => promo.featured)[0],\n        promoLoading: this.props.promotions.isLoading,\n        promoErrMess: this.props.promotions.errMess,\n        leaderLoading: this.props.leaders.isLoading,\n        leaderErrMess: this.props.leaders.errMess,\n        leader: this.props.leaders.leaders.filter(leader => leader.featured)[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      });\n    };\n\n    const DishWithId = ({\n      match\n    }) => {\n      return /*#__PURE__*/React.createElement(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.testId, 10))[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        comments: this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.testId, 10)),\n        commentsErrMess: this.props.comments.errMess,\n        postComment: this.props.postComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      key: this.props.location.key,\n      classNames: \"page\",\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/aboutus\",\n      component: () => /*#__PURE__*/React.createElement(About, {\n        leaders: this.props.leaders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 75\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/menu\",\n      component: () => /*#__PURE__*/React.createElement(Menu, {\n        dishes: this.props.dishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/menu/:tesId\",\n      component: DishWithId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/contactus\",\n      component: () => /*#__PURE__*/React.createElement(Contact, {\n        resetFeedbackForm: this.props.resetFeedbackForm,\n        postFeedback: this.props.postFeedback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postComment: (dishId, rating, author, comment) => {\n      dispatch(postComment(dishId, rating, author, comment));\n    },\n    fetchDishes: () => {\n      dispatch(fetchDishes());\n    },\n    resetFeedbackForm: () => {\n      dispatch(actions.reset('feedback'));\n    },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postFeedback: feedback => dispatch(postFeedback(feedback))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/home/rohit/Public/coursera/front_end_with_react_js/src/components/Main.js"],"names":["React","Component","Menu","DishDetail","Header","Footer","Switch","Route","Redirect","withRouter","actions","TransitionGroup","CSSTransition","Home","Contact","About","connect","postComment","fetchDishes","fetchComments","fetchPromos","fetchLeaders","postFeedback","Main","componentDidMount","props","render","HomePage","dishes","filter","dish","featured","isLoading","errMess","promotions","promo","leaders","leader","DishWithId","match","id","parseInt","params","testId","comments","comment","dishId","location","key","resetFeedbackForm","mapStateToProps","state","mapDispatchToProps","dispatch","rating","author","reset","feedback"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Menu from './Menu';\nimport DishDetail from './DishDetail';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { actions } from 'react-redux-form';\n\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport About from \"./About\";\n\nimport { connect } from 'react-redux';\nimport {\n    postComment,\n    fetchDishes,\n    fetchComments,\n    fetchPromos,\n    fetchLeaders,\n    postFeedback\n} from '../redux/ActionCreators';\n\nclass Main extends Component {\n\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return(\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                />\n            );\n        };\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.testId,10))[0]}\n                            isLoading={this.props.dishes.isLoading}\n                            errMess={this.props.dishes.errMess}\n                            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.testId,10))}\n                            commentsErrMess={this.props.comments.errMess}\n                            postComment={this.props.postComment}\n                />\n            );\n        };\n\n        return (\n            <div>\n                <Header/>\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:tesId' component={DishWithId} />\n                            <Route exact path='/contactus'\n                                   component={\n                                       () => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                                      postFeedback={this.props.postFeedback}/>\n                                   }\n                            />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer/>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        postComment: (dishId, rating, author, comment) => {\n            dispatch(postComment(dishId, rating, author, comment))\n        },\n        fetchDishes: () =>{\n            dispatch(fetchDishes())\n        },\n        resetFeedbackForm: ()=>{\n            dispatch(actions.reset('feedback'))\n        },\n        fetchComments: () => dispatch(fetchComments()),\n        fetchPromos: () => dispatch(fetchPromos()),\n        fetchLeaders: () => dispatch(fetchLeaders()),\n        postFeedback: (feedback) => dispatch(postFeedback(feedback))\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n"]},"metadata":{},"sourceType":"module"}