{"version":3,"sources":["images/logo.png","components/Loading.js","shared/baseUrl.js","components/Menu.js","components/CommentForm.js","components/DishDetail.js","components/Header.js","components/Footer.js","components/Home.js","components/Contact.js","components/About.js","redux/ActionCreators.js","redux/ActionTypes.js","components/Main.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","alert","JSON","stringify","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","xs","Col","select","model","value","text","placeholder","validators","minLength","show","messages","textarea","rows","Button","type","color","outline","onClick","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","i","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","Form","FormGroup","Input","innerRef","input","check","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","require","height","Collapse","navbar","Nav","NavItem","Jumbotron","Footer","RenderCard","item","designation","CardSubtitle","Home","console","log","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","md","size","offset","checkbox","About","leaders","CardHeader","title","Media","list","tag","left","middle","object","body","heading","commentsFailed","errmess","payload","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","addDishes","actions","reset","feedback","newFeedback","agree","contactType","email","firstname","lastname","telnum","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a03a418e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eb267f35.png\";","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};\n","export const baseUrl = 'http://localhost:3001/';\n","import { Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport React from \"react\";\n\nimport { Loading } from './Loading';\nimport {baseUrl} from \"../shared/baseUrl\";\n\nfunction RenderMenuItem ({dish}) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish}/>dishes\n                </div>\n            );\n        });\n\n    if (props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","import React, {Component} from \"react\";\nimport {Button, Col, Label, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\nimport {Control, Errors, LocalForm} from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n    handleSubmit(values) {\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n        this.toggleModal();\n        alert(\"Values: \" + JSON.stringify(values)+ values.rating);\n    }\n\n\n    render() {\n        return (\n\n            <div className={\"CommentForm\"}>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"rating\"} xs={12}>\n                                    Rating\n                                </Label>\n                                <Col xs={12} >\n                                    <Control.select model=\".rating\" id=\"rating\" name={\"rating\"}\n                                    className={\"form-control\"}>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"name\"} xs={12}>\n                                    Your Name\n                                </Label>\n                                <Col xs={12}>\n                                    <Control.text model={\".author\"} id={\"name\"} className={\"form-control\"} name={\"author\"}\n                                                  placeholder={\"Your Name\"}\n                                                  validators={{required, minLength: minLength(3), maxLength:maxLength(15)}}/>\n                                    <Errors model={\".author\"} className={\"text-danger\"}\n                                            show={\"touched\"} messages={{\n                                        required: 'Required ',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}/>\n                                </Col>\n\n                            </Row>\n                            <Row className={\"form-group\"}>\n                                <Label htmlFor={\"comment\"} xs={12}>\n                                    Comment\n                                </Label>\n                                <Col xs={12}>\n                                    <Control.textarea id={\"comment\"} className={\"form-control\"} name={\"comment\"}\n                                    rows={6} model={\".comment\"}/>\n                                </Col>\n                            </Row>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"/>\n                    Submit Comment\n                </Button>\n            </div>\n        );\n    }\n\n}\n\nexport default CommentForm;\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport CommentForm from \"./CommentForm\";\nimport { Loading } from './Loading';\nimport {baseUrl} from \"../shared/baseUrl\";\n\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderDish({dish}){\n    if(dish != null)\n        return (\n            <FadeTransform in transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>\n                                {dish.description}\n                            </CardText>\n                        </CardBody>\n                    </Card>\n            </FadeTransform>\n        );\n    else\n        return (\n            <div></div>\n        );\n}\n\nfunction RenderComments({comments, postComment, dishId}){\n    return (\n        <div className={\"col-12 col-md-5 m-1\"}>\n            <div>\n                <h4>Comments</h4>\n            </div>\n            <ul className=\"list-unstyled\">\n                <Stagger in>\n                    {\n                        comments.map((comment, i) =>{\n                            return(\n                                <Fade in>\n                                    <li key={comment.id}>\n                                        <p>\n                                            {comment.comment}\n                                        </p>\n                                        <p>\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US',\n                                            { year: 'numeric', month: 'short', day: '2-digit'})\n                                            .format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </li>\n                                </Fade>\n                            )\n                        })\n                    }\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment}/>\n        </div>\n    );\n}\n\nfunction DishDetail(props){\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish}/>\n                    </div>\n                    <RenderComments comments={props.comments}\n                                    postComment={props.postComment}\n                                    dishId={props.dish.id}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DishDetail;\n","import React, {Component} from \"react\";\nimport {Input, Label, FormGroup, Form, Button, Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <Form onSubmit={this.handleLogin}>\n                                <FormGroup>\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\n                                           innerRef={(input) => this.username = input} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                           innerRef={(input) => this.password = input}  />\n                                </FormGroup>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" name=\"remember\"\n                                               innerRef={(input) => this.remember = input}  />\n                                        Remember me\n                                    </Label>\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                            </Form>\n                        </Form>\n\n                    </ModalBody>\n                </Modal>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src={require('../images/logo.png')} height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"/> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"/> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"/> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"/> Contact Us</NavLink>\n                                </NavItem>\n                                <Nav className=\"ml-auto\" navbar>\n                                    <NavItem>\n                                        <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                    </NavItem>\n                                </Nav>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React, {useEffect} from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './Loading';\nimport {baseUrl} from \"../shared/baseUrl\";\n\nimport { FadeTransform } from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return (\n            <FadeTransform in transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg src={baseUrl+item.image} alt={item.name}/>\n                        <CardBody>\n                            <CardTitle>{item.name}</CardTitle>\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                            <CardText>{item.description}</CardText>\n                        </CardBody>\n                    </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props) {\n    console.log(\"Debug Home: \" ,props);\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                                isLoading={props.dishesLoading}\n                                errMess={props.dishErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                                isLoading={props.promoLoading}\n                                errMess={props.promoErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                                isLoading={props.leaderLoading}\n                                errMess={props.leaderErrMess}\n\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Control, Form, Errors, actions} from 'react-redux-form';\n\nconst required = function (val){\n    return val && val.length;\n}\nconst maxLength = function (len){\n    return function (val){\n        return !(val) || (val.length <= len);\n    }\n}\n\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        // console.log('Current state is:' + JSON.stringify(values));\n        // alert('Current state is: ' + JSON.stringify(values));\n        this.props.postFeedback(values);\n        console.log('Current state is:' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row row-content\"}>\n                    <div className={\"col-12\"}>\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className={\"col-12 col-md-9\"}>\n                        <Form model={\"feedback\"} onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                                  placeholder=\"First Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,\n                                                      minLength: minLength(3),\n                                                      maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors model={\".firstname\"}\n                                            className={\"text-danger\"}\n                                            show={\"touched\"}\n                                            messages={{\n                                                required: \"Required\",\n                                                minLength: \"Must be greater than 2 characters\",\n                                                maxLength: \"Must be less than 15 characters or less\"\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                                  placeholder=\"Last Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                                  placeholder=\"Tel. Number\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                  placeholder=\"Email\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, validEmail\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                              className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                                    className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                      rows=\"12\"\n                                                      className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport Switch, { Link } from 'react-router-dom';\nimport {baseUrl} from \"../shared/baseUrl\";\nimport {Loading} from \"./Loading\";\nimport {Stagger, Fade} from \"react-animation-components\";\n\nfunction About(props) {\n\n    if(props.leaders.isLoading){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.leaders.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.leaders.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                            P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            <Stagger in>\n                            {\n                                props.leaders.leaders.map((leader) => {\n                                    return (\n                                        <div key={leader.id} className=\"col-12 mt-5\">\n                                            <Media tag=\"li\">\n                                                <Media left middle>\n                                                    <Media object src={baseUrl+leader.image} alt={leader.name} />\n                                                </Media>\n                                                <Media body className=\"ml-5\">\n                                                    <Fade in>\n                                                        <Media heading>{leader.name}</Media>\n                                                        <p>{leader.designation}</p>\n                                                        <p>{leader.description}</p>\n                                                    </Fade>\n                                                </Media>\n                                            </Media>\n                                        </div>\n                                    );\n                                })\n                            }\n                            </Stagger>\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from \"../shared/baseUrl\";\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\n\nexport const dishesLoading = () =>{\n    return {\n        type: ActionTypes.DISHES_LOADING\n    }\n}\n\nexport const dishesFailed = (errmess) => {\n    return{\n        type: ActionTypes.DISHES_FAILED,\n        payload:errmess\n    }\n}\n\nexport const addDishes = (dishes) => {\n    return {\n        type: ActionTypes.ADD_DISHES,\n        payload: dishes\n    }\n}\n\nexport const fetchDishes = () => {\n    return function (dispatch){\n        dispatch(dishesLoading);\n\n        fetch(baseUrl + 'dishes')\n            .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n                error => {\n                    let errmess = new Error(error.message);\n                    throw errmess;\n                })\n            .then(response => response.json())\n            .then(dishes => {\n                    dispatch(addDishes(dishes))\n                }\n            )\n            .catch(error => dispatch(dishesFailed(error.message)));\n    }\n}\n//comments\nexport const fetchComments = () => (dispatch) => {\n    fetch(baseUrl + 'comments')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n//promos\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    fetch(baseUrl + 'promotions')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n//Leaders\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading());\n\n    fetch(baseUrl + 'leaders')\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\nexport const postFeedback = (feedback) => () => {\n\n    const newFeedback = {\n        agree: feedback.agree,\n        contactType: feedback.contactType,\n        email: feedback.email,\n        firstname: feedback.firstname,\n        lastname: feedback.lastname,\n        message: feedback.message,\n        telnum: feedback.telnum,\n    }\n    newFeedback.date = new Date().toISOString();\n\n    fetch(baseUrl + 'feedback',{\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    let error = new Error('Error '+response.status+': '+response.statusText);\n                    error.response = response;\n\n                    throw error;\n                }\n            },\n            error => {\n                let errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(response => {\n            console.log(\"Posted feedback successfully\", response)\n            alert(\"Thank you for your Feedback\\n\"+ JSON.stringify(response));\n        })\n        .catch(error => {\n            console.log(error);\n            alert(\"Sorry your feedback is not submitted\\n Error:\"+ error);\n        });\n}\n\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADER';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n","import React, { Component } from 'react';\nimport Menu from './Menu';\nimport DishDetail from './DishDetail';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { actions } from 'react-redux-form';\n\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport About from \"./About\";\n\nimport { connect } from 'react-redux';\nimport {\n    postComment,\n    fetchDishes,\n    fetchComments,\n    fetchPromos,\n    fetchLeaders,\n    postFeedback\n} from '../redux/ActionCreators';\n\nclass Main extends Component {\n\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        console.log(\"Debug in Main: \", this.props);\n\n        const HomePage = () => {\n            return(\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                />\n            );\n        };\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                            isLoading={this.props.dishes.isLoading}\n                            errMess={this.props.dishes.errMess}\n                            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                            commentsErrMess={this.props.comments.errMess}\n                            postComment={this.props.postComment}\n                />\n            );\n        };\n\n        return (\n            <div>\n                <Header/>\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus'\n                                   component={\n                                       () => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                                      postFeedback={this.props.postFeedback}/>\n                                   }\n                            />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer/>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        postComment: (dishId, rating, author, comment) => {\n            dispatch(postComment(dishId, rating, author, comment))\n        },\n        fetchDishes: () =>{\n            dispatch(fetchDishes())\n        },\n        resetFeedbackForm: ()=>{\n            dispatch(actions.reset('feedback'))\n        },\n        fetchComments: () => dispatch(fetchComments()),\n        fetchPromos: () => dispatch(fetchPromos()),\n        fetchLeaders: () => dispatch(fetchLeaders()),\n        postFeedback: (feedback) => dispatch(postFeedback(feedback))\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                dishes: action.payload\n            };\n        case ActionTypes.DISHES_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                dishes: []\n            };\n        case ActionTypes.DISHES_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                dishes: []\n            };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            let comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n    errMess: null,\n    promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (state  = { isLoading: true,\n    errMess: null,\n    leaders:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\n","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};\n","import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from \"./components/Main\";\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { createForms } from 'react-redux-form';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}